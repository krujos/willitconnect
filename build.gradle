import org.gradle.api.tasks.wrapper.Wrapper

buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://jcenter.bintray.com" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:1.2.0")
        classpath("com.homedepot.gitprops:GitPropsPlugin:1.0.8")
    }

}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'
apply plugin: 'com.homedepot.gitprops'

jar {
    baseName = 'willitconnect'
    version = '1.0.13'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.json:json:20170516"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.powermock:powermock-mockito-release-full:1.6.4"
}

task webpack(type: NodeTask) {
  script = file('node_modules/webpack/bin/webpack')
}

task karma(type: NpmTask) {
    dependsOn 'npmInstall'
    args = ['test']
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-21'
    }
}

tasks.named('wrapper') {
    gradleVersion = '8.14.3'
    distributionType = Wrapper.DistributionType.ALL
}

project.tasks.processResources.dependsOn('npmInstall')
project.tasks.processResources.dependsOn('webpack')
project.tasks.test.dependsOn('karma')
