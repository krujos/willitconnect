buildscript {
    ext {
        springBootVersion = '1.5.22.RELEASE'
        gradleNodeVersion = '1.3.1'
        gitPropsVersion = '1.0.8'
        gradleVersionsVersion = '0.24.0'
    }
    repositories {
        mavenCentral()
        maven { url "http://jcenter.bintray.com" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:${gradleNodeVersion}")
        classpath("com.homedepot.gitprops:GitPropsPlugin:${gitPropsVersion}")
        classpath("com.github.ben-manes:gradle-versions-plugin:${gradleVersionsVersion}")
    }

}

plugins {
    id "com.gradle.build-scan" version "2.4.1"
    id "jacoco"
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'
apply plugin: 'com.homedepot.gitprops'
apply plugin: "com.github.ben-manes.versions"

jar {
    baseName = 'willitconnect'
    version = '1.0.13'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.json:json:20190722")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.powermock:powermock-mockito-release-full:1.6.4")
}

jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}


task webpack(type: NodeTask) {
  script = file('node_modules/webpack/bin/webpack')
}

task karma(type: NpmTask) {
    dependsOn 'npmInstall'
    args = ['test']
}

project.tasks.processResources.dependsOn('npmInstall')
project.tasks.processResources.dependsOn('webpack')
project.tasks.test.dependsOn('karma')
